{
  "openapi": "3.0.0",
  "info": {
    "title": "Music API",
    "description": "API for managing music, artists, albums, tracks, playlists, and lyrics",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/artists": {
      "get": {
        "summary": "Get all artists",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["name", "popularity"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          },
          {
            "in": "query",
            "name": "minPopularity",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Minimum popularity score"
          }
        ],
        "responses": {
          "200": {
            "description": "List of artists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new artist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          }
        }
      }
    },
    "/api/albums": {
      "get": {
        "summary": "Get all albums",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["title", "releaseDate", "trackCount"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          }
        ],
        "responses": {
          "200": {
            "description": "List of albums",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new album",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Album created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          }
        }
      }
    },
    "/api/tracks": {
      "get": {
        "summary": "Get all tracks",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["title", "duration", "popularity", "releaseDate"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          },
          {
            "in": "query",
            "name": "minDuration",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum duration in seconds"
          },
          {
            "in": "query",
            "name": "maxDuration",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum duration in seconds"
          },
          {
            "in": "query",
            "name": "minPopularity",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Minimum popularity score"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tracks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new track",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Track created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          }
        }
      }
    },
    "/api/playlists": {
      "get": {
        "summary": "Get all playlists",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["name", "trackCount", "createdAt"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "minTracks",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum number of tracks"
          },
          {
            "in": "query",
            "name": "maxTracks",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of tracks"
          }
        ],
        "responses": {
          "200": {
            "description": "List of playlists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Playlist"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new playlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Playlist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search across all entities",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": ["all", "tracks", "albums", "artists", "playlists"]
            },
            "description": "Type of entities to search"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items to return per type"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tracks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Track"
                      }
                    },
                    "albums": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Album"
                      }
                    },
                    "artists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Artist"
                      }
                    },
                    "playlists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Playlist"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lyrics/track/{trackId}": {
      "get": {
        "summary": "Get lyrics for a track",
        "parameters": [
          {
            "in": "path",
            "name": "trackId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Track ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Track lyrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lyrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/lyrics/search": {
      "get": {
        "summary": "Search lyrics",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lyrics"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Artist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "popularity": {
            "type": "number"
          },
          "albums": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Album": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Track": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "genre": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "popularity": {
            "type": "number"
          },
          "audioUrl": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Lyrics": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "track": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "verses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Verse"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/LyricsMetadata"
          }
        }
      },
      "Images": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string"
          },
          "small": {
            "type": "string"
          },
          "medium": {
            "type": "string"
          },
          "large": {
            "type": "string"
          }
        }
      },
      "Verse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "endTime": {
            "type": "number"
          }
        }
      },
      "LyricsMetadata": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "enum": ["User", "Official", "Community"]
          },
          "contributor": {
            "type": "string"
          },
          "verifiedBy": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ArtistInput": {
        "type": "object",
        "required": ["name", "genre"],
        "properties": {
          "name": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "AlbumInput": {
        "type": "object",
        "required": ["title", "artist"],
        "properties": {
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "TrackInput": {
        "type": "object",
        "required": ["title", "artist", "album"],
        "properties": {
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "genre": {
            "type": "string"
          },
          "audioUrl": {
            "type": "string"
          }
        }
      },
      "PlaylistInput": {
        "type": "object",
        "required": ["name", "createdBy"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean",
            "default": true
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      }
    }
  }
}<<<<<<< jsp
{
  "openapi": "3.0.0",
  "info": {
    "title": "Music API",
    "description": "API for managing music, artists, albums, tracks, playlists, and lyrics",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/artists": {
      "get": {
        "summary": "Get all artists",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["name", "popularity"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          },
          {
            "in": "query",
            "name": "minPopularity",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Minimum popularity score"
          }
        ],
        "responses": {
          "200": {
            "description": "List of artists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new artist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          }
        }
      }
    },
    "/api/albums": {
      "get": {
        "summary": "Get all albums",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["title", "releaseDate", "trackCount"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          }
        ],
        "responses": {
          "200": {
            "description": "List of albums",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new album",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Album created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          }
        }
      }
    },
    "/api/tracks": {
      "get": {
        "summary": "Get all tracks",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["title", "duration", "popularity", "releaseDate"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "genre",
            "schema": {
              "type": "string"
            },
            "description": "Filter by genre"
          },
          {
            "in": "query",
            "name": "minDuration",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum duration in seconds"
          },
          {
            "in": "query",
            "name": "maxDuration",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum duration in seconds"
          },
          {
            "in": "query",
            "name": "minPopularity",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Minimum popularity score"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tracks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new track",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Track created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          }
        }
      }
    },
    "/api/playlists": {
      "get": {
        "summary": "Get all playlists",
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": ["name", "trackCount", "createdAt"]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          },
          {
            "in": "query",
            "name": "minTracks",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum number of tracks"
          },
          {
            "in": "query",
            "name": "maxTracks",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of tracks"
          }
        ],
        "responses": {
          "200": {
            "description": "List of playlists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Playlist"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new playlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Playlist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search across all entities",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": ["all", "tracks", "albums", "artists", "playlists"]
            },
            "description": "Type of entities to search"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items to return per type"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tracks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Track"
                      }
                    },
                    "albums": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Album"
                      }
                    },
                    "artists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Artist"
                      }
                    },
                    "playlists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Playlist"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lyrics/track/{trackId}": {
      "get": {
        "summary": "Get lyrics for a track",
        "parameters": [
          {
            "in": "path",
            "name": "trackId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Track ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Track lyrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lyrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/lyrics/search": {
      "get": {
        "summary": "Search lyrics",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of items to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lyrics"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Artist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "popularity": {
            "type": "number"
          },
          "albums": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Album": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Track": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "genre": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "popularity": {
            "type": "number"
          },
          "audioUrl": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Lyrics": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "track": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "verses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Verse"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/LyricsMetadata"
          }
        }
      },
      "Images": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string"
          },
          "small": {
            "type": "string"
          },
          "medium": {
            "type": "string"
          },
          "large": {
            "type": "string"
          }
        }
      },
      "Verse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "startTime": {
            "type": "number"
          },
          "endTime": {
            "type": "number"
          }
        }
      },
      "LyricsMetadata": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "enum": ["User", "Official", "Community"]
          },
          "contributor": {
            "type": "string"
          },
          "verifiedBy": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ArtistInput": {
        "type": "object",
        "required": ["name", "genre"],
        "properties": {
          "name": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "AlbumInput": {
        "type": "object",
        "required": ["title", "artist"],
        "properties": {
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "genre": {
            "type": "string"
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      },
      "TrackInput": {
        "type": "object",
        "required": ["title", "artist", "album"],
        "properties": {
          "title": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "genre": {
            "type": "string"
          },
          "audioUrl": {
            "type": "string"
          }
        }
      },
      "PlaylistInput": {
        "type": "object",
        "required": ["name", "createdBy"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isPublic": {
            "type": "boolean",
            "default": true
          },
          "images": {
            "$ref": "#/components/schemas/Images"
          }
        }
      }
    }
  }
}
=======
{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Spotify Clone API",
    "description": "API documentation for the Spotify Clone project with built-in retry mechanisms for improved reliability"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": ["http"],
  "paths": {
    "/csrf-token": {
      "get": {
        "summary": "Get CSRF token",
        "responses": {
          "200": {
            "description": "CSRF token",
            "schema": {
              "type": "object",
              "properties": {
                "csrfToken": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "credentials",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/albums": {
      "post": {
        "summary": "Create a new album",
        "description": "Creates a new album with automatic retry on failure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "album",
            "description": "Album object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Album created successfully",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/albums/{id}": {
      "get": {
        "summary": "Get album by ID",
        "description": "Retrieves an album by ID with caching and automatic retry on failure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Album ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Album found",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update album",
        "description": "Updates an album with automatic retry on failure",
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Album ID"
          },
          {
            "in": "body",
            "name": "album",
            "description": "Updated album object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album updated successfully",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete album",
        "description": "Deletes an album with automatic retry on failure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Album ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Album deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Album deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Album not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "/images": {
        "get": {
          "summary": "Get album images",
          "description": "Retrieves album images in different sizes with caching and automatic retry on failure",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Album ID"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Image size to retrieve",
              "enum": ["thumbnail", "small", "medium", "large", "original"],
              "default": "medium"
            }
          ],
          "responses": {
            "200": {
              "description": "Album images retrieved successfully",
              "schema": {
                "$ref": "#/definitions/AlbumImage"
              }
            },
            "400": {
              "description": "Invalid size parameter",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Invalid size parameter"
                  },
                  "validSizes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["thumbnail", "small", "medium", "large", "original"]
                  }
                }
              }
            },
            "404": {
              "description": "Album or image not found",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/upload-audio": {
      "post": {
        "summary": "Upload an audio file",
        "description": "Upload an audio file with automatic retry on failure",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "name": "audio",
            "in": "formData",
            "description": "The audio file to upload",
            "required": true,
            "type": "file"
          },
          {
            "name": "trackId",
            "in": "formData",
            "description": "The ID of the track to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Audio file uploaded successfully"
          },
          "500": {
            "description": "Error uploading audio file",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/upload-image": {
      "post": {
        "summary": "Upload an image file",
        "description": "Upload an image file with automatic retry on failure",
        "consumes": ["multipart/form-data"],
        "parameters": [{
          "in": "header",
          "name": "X-CSRF-Token",
          "description": "CSRF Token for protection against CSRF attacks",
          "required": true,
          "type": "string"
        },
          {
            "name": "image",
            "in": "formData",
            "description": "The image file to upload",
            "required": true,
            "type": "file"
          },
          {
            "name": "albumId",
            "in": "formData",
            "description": "The ID of the album to update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image file uploaded successfully"
          },
          "500": {
            "description": "Error uploading image file",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Search for tracks",
        "description": "Search for tracks with caching and automatic retry on failure",
        "parameters": [
          {
            "name": "artist",
            "in": "query",
            "description": "Artist name",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Track title",
            "required": false,
            "type": "string"
          },
          {
            "name": "album",
            "in": "query",
            "description": "Album title",
            "required": false,
            "type": "string"
          },
          {
            "name": "genre",
            "in": "query",
            "description": "Genre",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Track"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/monitor/redis/stats": {
      "get": {
        "tags": ["Monitoring"],
        "summary": "Get Redis statistics",
        "description": "Returns basic Redis statistics including memory usage, operations, and connections",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RedisStats"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/monitor/media/stats": {
      "get": {
        "tags": ["Monitoring"],
        "summary": "Get media processing statistics",
        "description": "Returns statistics about media processing operations",
        "parameters": [
          {
            "name": "timeRange",
            "in": "query",
            "description": "Time range in milliseconds",
            "required": false,
            "type": "integer",
            "default": 3600000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/MediaStats"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/monitor/server/resources": {
      "get": {
        "tags": ["Monitoring"],
        "summary": "Get server resource usage",
        "description": "Returns server CPU, memory, and disk usage statistics",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ServerResources"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tracks/{id}/audio": {
      "get": {
        "summary": "Get track audio",
        "description": "Retrieves track audio with format and bitrate options, includes caching and automatic retry on failure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Track ID"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Audio format",
            "enum": ["mp3", "ogg", "wav"],
            "default": "mp3"
          },
          {
            "name": "bitrate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Audio bitrate",
            "enum": ["64k", "128k", "192k", "256k", "320k"],
            "default": "128k"
          }
        ],
        "responses": {
          "200": {
            "description": "Track audio retrieved successfully",
            "schema": {
              "$ref": "#/definitions/TrackAudio"
            }
          },
          "400": {
            "description": "Invalid format or bitrate parameter",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid format parameter"
                },
                "validFormats": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["mp3", "ogg", "wav"]
                },
                "validBitrates": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["64k", "128k", "192k", "256k", "320k"]
                }
              }
            }
          },
          "404": {
            "description": "Track or audio not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Upload track audio",
        "description": "Upload and convert track audio with automatic retry on failure",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Track ID"
          },
          {
            "name": "audio",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "Audio file to upload"
          }
        ],
        "responses": {
          "200": {
            "description": "Audio uploaded and converted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Audio uploaded and converted successfully"
                },
                "audioUrl": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/example/video/upload/v1234567890/track.mp3"
                }
              }
            }
          },
          "400": {
            "description": "No audio file provided",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Track not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tracks/{id}": {
      "get": {
        "summary": "Get track by ID",
        "description": "Retrieves a track by ID with caching and automatic retry on failure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Track ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Track found",
            "schema": {
              "$ref": "#/definitions/Track"
            }
          },
          "404": {
            "description": "Track not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update track",
        "description": "Updates a track with automatic retry on failure",
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Track ID"
          },
          {
            "in": "body",
            "name": "track",
            "description": "Updated track object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrackInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Track updated successfully",
            "schema": {
              "$ref": "#/definitions/Track"
            }
          },
          "404": {
            "description": "Track not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete track",
        "description": "Deletes a track with automatic retry on failure",
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "description": "CSRF Token for protection against CSRF attacks",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Track ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Track deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Track deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Track not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "System health status",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "redis": {
                  "type": "string"
                },
                "session": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  
  },
  "definitions": {
    "UserRegistration": {
      "type": "object",
      "required": ["username", "email", "password"],
      "properties": {
        "username": {
          "type": "string",
          "minLength": 3,
          "maxLength": 30
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 6
        },
        "role": {
          "type": "string",
          "enum": ["admin", "user"],
          "default": "user"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
  

    "Track": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Track ID"
        },
        "title": {
          "type": "string",
          "description": "Track title"
        },
        "duration": {
          "type": "integer",
          "description": "Track duration in seconds"
        },
        "artist": {
          "type": "string",
          "description": "Artist ID reference"
        },
        "album": {
          "type": "string",
          "description": "Album ID reference"
        },
        "genre": {
          "type": "string",
          "description": "Track genre"
        },
        "popularity": {
          "type": "integer",
          "description": "Track popularity score"
        },
        "audioUrl": {
          "type": "string",
          "description": "URL to the audio file"
        },
        "phoneticCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Phonetic codes for search"
        },
        "images": {
          "type": "object",
          "properties": {
            "original": {
              "type": "string",
              "description": "Original image URL"
            },
            "thumbnail": {
              "type": "string",
              "description": "Thumbnail image URL"
            },
            "small": {
              "type": "string",
              "description": "Small image URL"
            },
            "medium": {
              "type": "string",
              "description": "Medium image URL"
            },
            "large": {
              "type": "string",
              "description": "Large image URL"
            }
          }
        }
      }
    },
    "Album": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Album ID"
        },
        "title": {
          "type": "string",
          "description": "Album title"
        },
        "artist": {
          "type": "string",
          "description": "Artist ID reference"
        },
        "genre": {
          "type": "string",
          "description": "Album genre"
        },
        "releaseDate": {
          "type": "string",
          "format": "date",
          "description": "Album release date"
        },
        "tracks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of track ID references"
        },
        "phoneticCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Phonetic codes for search"
        },
        "images": {
          "type": "object",
          "properties": {
            "original": {
              "type": "string",
              "description": "Original image URL"
            },
            "thumbnail": {
              "type": "string",
              "description": "Thumbnail image URL"
            },
            "small": {
              "type": "string",
              "description": "Small image URL"
            },
            "medium": {
              "type": "string",
              "description": "Medium image URL"
            },
            "large": {
              "type": "string",
              "description": "Large image URL"
            }
          }
        }
      }
    },
    "AlbumInput": {
      "type": "object",
      "required": ["title", "artist"],
      "properties": {
        "title": {
          "type": "string",
          "description": "Album title"
        },
        "artist": {
          "type": "string",
          "description": "Artist ID"
        },
        "genre": {
          "type": "string",
          "description": "Album genre"
        },
        "releaseDate": {
          "type": "string",
          "format": "date",
          "description": "Album release date"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "RedisStats": {
      "type": "object",
      "properties": {
        "memory": {
          "type": "object",
          "properties": {
            "used": {
              "type": "string",
              "example": "1.25 MB"
            },
            "peak": {
              "type": "string",
              "example": "1.5 MB"
            },
            "fragmentation": {
              "type": "string",
              "example": "1.23%"
            }
          }
        },
        "operations": {
          "type": "object",
          "properties": {
            "totalCommands": {
              "type": "integer",
              "example": 1234
            },
            "keyspaceHits": {
              "type": "integer",
              "example": 1000
            },
            "keyspaceMisses": {
              "type": "integer",
              "example": 234
            },
            "hitRate": {
              "type": "string",
              "example": "81.03%"
            }
          }
        }
      }
    },
    "MediaStats": {
      "type": "object",
      "properties": {
        "image_resize": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 150
            },
            "avgDuration": {
              "type": "string",
              "example": "1325.45"
            },
            "minDuration": {
              "type": "string",
              "example": "985.00"
            },
            "maxDuration": {
              "type": "string",
              "example": "2150.30"
            },
            "lastProcessed": {
              "type": "string",
              "format": "date-time",
              "example": "2024-03-09T12:30:45.123Z"
            }
          }
        },
        "audio_convert": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 75
            },
            "avgDuration": {
              "type": "string",
              "example": "3250.80"
            },
            "minDuration": {
              "type": "string",
              "example": "985.00"
            },
            "maxDuration": {
              "type": "string",
              "example": "4500.20"
            },
            "lastProcessed": {
              "type": "string",
              "format": "date-time",
              "example": "2024-03-09T12:28:15.456Z"
            }
          }
        }
      }
    },
    "ServerResources": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "object",
          "properties": {
            "cores": {
              "type": "integer",
              "example": 8
            },
            "model": {
              "type": "string",
              "example": "Intel(R) Core(TM) i7"
            },
            "speed": {
              "type": "string",
              "example": "2600 MHz"
            },
            "usagePercent": {
              "type": "string",
              "example": "19.25%"
            }
          }
        },
        "memory": {
          "type": "object",
          "properties": {
            "total": {
              "type": "string",
              "example": "16.0 GB"
            },
            "free": {
              "type": "string",
              "example": "8.5 GB"
            },
            "used": {
              "type": "string",
              "example": "7.5 GB"
            },
            "usagePercent": {
              "type": "string",
              "example": "46.88%"
            }
          }
        },
        "disk": {
          "type": "object",
          "properties": {
            "total": {
              "type": "string",
              "example": "512.0 GB"
            },
            "free": {
              "type": "string",
              "example": "285.3 GB"
            },
            "used": {
              "type": "string",
              "example": "226.7 GB"
            },
            "usagePercent": {
              "type": "string",
              "example": "44.28%"
            }
          }
        }
      }
    },
    "AlbumImage": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string",
          "description": "URL of the image in requested size",
          "example": "https://res.cloudinary.com/example/image/upload/v1234567890/album_medium.webp"
        },
        "size": {
          "type": "string",
          "description": "Size of the returned image",
          "enum": ["thumbnail", "small", "medium", "large", "original"],
          "example": "medium"
        },
        "availableSizes": {
          "type": "array",
          "description": "List of available sizes for this image",
          "items": {
            "type": "string"
          },
          "example": ["thumbnail", "small", "medium", "large", "original"]
        }
      }
    },
    "TrackAudio": {
      "type": "object",
      "properties": {
        "audioUrl": {
          "type": "string",
          "description": "URL of the audio file",
          "example": "https://res.cloudinary.com/example/video/upload/v1234567890/track.mp3"
        },
        "format": {
          "type": "string",
          "description": "Audio format",
          "enum": ["mp3", "ogg", "wav"],
          "example": "mp3"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate",
          "enum": ["64k", "128k", "192k", "256k", "320k"],
          "example": "128k"
        },
        "availableFormats": {
          "type": "array",
          "description": "List of available audio formats",
          "items": {
            "type": "string"
          },
          "example": ["mp3", "ogg", "wav"]
        },
        "availableBitrates": {
          "type": "array",
          "description": "List of available bitrates",
          "items": {
            "type": "string"
          },
          "example": ["64k", "128k", "192k", "256k", "320k"]
        }
      }
    },
    "TrackInput": {
      "type": "object",
      "required": ["title", "artist", "album"],
      "properties": {
        "title": {
          "type": "string",
          "description": "Track title"
        },
        "artist": {
          "type": "string",
          "description": "Artist ID"
        },
        "album": {
          "type": "string",
          "description": "Album ID"
        },
        "genre": {
          "type": "string",
          "description": "Track genre"
        },
        "duration": {
          "type": "integer",
          "description": "Track duration in seconds"
        }
      }
    }
  },
  "tags": [
    {
      "name": "albums",
      "description": "Album management endpoints with retry mechanisms"
    },
    {
      "name": "tracks",
      "description": "Track management endpoints with retry mechanisms"
    },
    {
      "name": "search",
      "description": "Search endpoints with caching and retry mechanisms"
    },
    {
      "name": "Monitoring",
      "description": "Monitoring endpoints for Redis, media processing, and server resources"
    }
  ],
  "externalDocs": {
    "description": "Additional documentation",
    "url": "https://github.com/your-repo/docs"
  }
}

